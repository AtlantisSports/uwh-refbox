#!/usr/bin/env python

from refbox.ui import NormalView, RefboxConfigParser, is_rpi
from uwh.gamemanager import GameManager, PoolLayout
from uwh.xbee_comms import XBeeServer, XBeeClient, xbee_port, xbee_baud, xbee_clients, xbee_id, xbee_ch
from uwh.uwhscores_comms import UWHScores

import socket

if is_rpi():
    from refbox.iomanager import IOManager
else:
    from refbox.noiomanager import IOManager

cfg = RefboxConfigParser()
cfg.read('timeshark.cfg')

mgr = GameManager()

tid = cfg.getint('game', 'tid')
mgr.setTid(tid)
mgr.setGid(2)

if cfg.getboolean('hardware', 'white_on_right'):
    mgr.setLayout(PoolLayout.white_on_right)
else:
    mgr.setLayout(PoolLayout.white_on_left)

url = cfg.get('game', 'uwhscores_url')
uwhscores = UWHScores(url)
username = cfg.get('game', 'uwhscores_admin')
password = cfg.get('game', 'uwhscores_password')
uwhscores.login(username, password)

if cfg.getboolean('hardware', 'has_xbee'):
    xbee = XBeeServer(mgr, xbee_port(cfg), xbee_baud(cfg))
    xbee.setup(xbee_id(cfg), xbee_ch(cfg), socket.gethostname())
    def found_client(remote):
       print("{} - {}".format(remote.get_64bit_addr(), remote.get_node_id()))
    print("Available Displays:")
    xbee.client_discovery(found_client)
    xbee.broadcast_thread(xbee_clients(cfg))

nv = NormalView(mgr, IOManager(), NO_TITLE_BAR=is_rpi(), cfg=cfg, uwhscores=uwhscores)

def quit(event):
    print("Quitting...")
    nv.root.quit()

try:
    nv.root.bind('<Control-c>', quit)
    nv.root.bind('<Escape>', quit)
    nv.root.mainloop()
except KeyboardInterrupt:
    quit(None)
